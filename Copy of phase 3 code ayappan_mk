{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1u0SnOUxzSZ47kty_sxEBXvlPnsMXpkQo","timestamp":1747411614144}],"authorship_tag":"ABX9TyOXqs+71vxB/i4motk1C48t"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"is1mLzWbux70","executionInfo":{"status":"ok","timestamp":1747410893804,"user_tz":480,"elapsed":59,"user":{"displayName":"Ayappan Palani (Jace)","userId":"14027805070623119759"}},"outputId":"11df1706-f51c-4c8a-aa08-e5ca957e0af9"},"outputs":[{"output_type":"stream","name":"stdout","text":["âœ… Dataset generated: customer_support_dataset.csv\n"]}],"source":["import csv\n","import random\n","\n","# Categories and example queries/responses\n","categories = {\n","    \"billing\": [\n","        (\"I was charged twice this month.\", \"I'm sorry to hear that. Let me check your billing history.\"),\n","        (\"Can I get a refund?\", \"Sure, let me initiate a refund for you.\"),\n","        (\"Why is my invoice so high?\", \"I'll review your latest invoice for any unusual charges.\"),\n","    ],\n","    \"technical\": [\n","        (\"My app keeps crashing.\", \"Sorry about that. Could you try reinstalling the app?\"),\n","        (\"I can't connect to the server.\", \"Letâ€™s troubleshoot your connection.\"),\n","        (\"The website is not loading.\", \"Weâ€™re looking into this issue.\"),\n","    ],\n","    \"account\": [\n","        (\"How do I reset my password?\", \"You can reset your password from the account settings.\"),\n","        (\"I want to delete my account.\", \"Weâ€™re sorry to see you go. I'll guide you through the deletion process.\"),\n","        (\"How can I update my email address?\", \"You can update your email in your profile settings.\"),\n","    ],\n","    \"general\": [\n","        (\"What are your working hours?\", \"We are available 24/7.\"),\n","        (\"Where are you located?\", \"We operate remotely worldwide.\"),\n","        (\"Do you have a mobile app?\", \"Yes, our app is available on Android and iOS.\"),\n","    ]\n","}\n","\n","# Generate 1000 dataset entries\n","dataset = []\n","for _ in range(1000):\n","    category = random.choice(list(categories.keys()))\n","    query, response = random.choice(categories[category])\n","    dataset.append([category, query, response])\n","\n","# Write to CSV\n","with open('customer_support_dataset.csv', 'w', newline='') as file:\n","    writer = csv.writer(file)\n","    writer.writerow([\"Category\", \"Query\", \"Response\"])\n","    writer.writerows(dataset)\n","\n","print(\"âœ… Dataset generated: customer_support_dataset.csv\")\n"]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.naive_bayes import MultinomialNB\n","\n","# Load dataset\n","data = pd.read_csv('customer_support_dataset.csv')\n","\n","# Train a simple classifier\n","vectorizer = CountVectorizer()\n","X = vectorizer.fit_transform(data['Query'])\n","y = data['Category']\n","\n","model = MultinomialNB()\n","model.fit(X, y)\n","\n","# Function to predict category and respond\n","def get_response(user_input):\n","    input_vec = vectorizer.transform([user_input])\n","    predicted_category = model.predict(input_vec)[0]\n","\n","    responses = data[data['Category'] == predicted_category]['Response'].tolist()\n","    response = random.choice(responses)\n","\n","    return f\"[{predicted_category.upper()}] {response}\"\n","\n","# Chat loop\n","print(\"ðŸ¤– Hello! I'm your support assistant. Type 'exit' to leave.\")\n","while True:\n","    user_input = input(\"You: \")\n","    if user_input.lower() == 'exit':\n","        print(\"ðŸ¤– Goodbye!\")\n","        break\n","    response = get_response(user_input)\n","    print(f\"Bot: {response}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":512},"id":"tmwBA9nqzYR2","executionInfo":{"status":"error","timestamp":1747411125111,"user_tz":480,"elapsed":208424,"user":{"displayName":"Ayappan Palani (Jace)","userId":"14027805070623119759"}},"outputId":"a2d4d6d8-5f3a-47ec-ba7b-b9c4c5f339bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ðŸ¤– Hello! I'm your support assistant. Type 'exit' to leave.\n","You: iyappan\n","Bot: [BILLING] I'll review your latest invoice for any unusual charges.\n","You: s\n","Bot: [BILLING] I'll review your latest invoice for any unusual charges.\n","You: yes\n","Bot: [BILLING] I'm sorry to hear that. Let me check your billing history.\n","You: meemukutty\n","Bot: [BILLING] I'll review your latest invoice for any unusual charges.\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-7088b35a65ca>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ðŸ¤– Hello! I'm your support assistant. Type 'exit' to leave.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m     \u001b[0muser_input\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"You: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0muser_input\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'exit'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ðŸ¤– Goodbye!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1175\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1176\u001b[0m             )\n\u001b[0;32m-> 1177\u001b[0;31m         return self._input_request(\n\u001b[0m\u001b[1;32m   1178\u001b[0m             \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"shell\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1217\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1219\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1220\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1221\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"code","source":["import csv\n","import random\n","\n","class DatasetGenerator:\n","    def __init__(self, output_file='customer_support_dataset.csv'):\n","        self.output_file = output_file\n","        self.categories = self.define_categories()\n","\n","    def define_categories(self):\n","        \"\"\"Define support categories with sample queries and responses.\"\"\"\n","        return {\n","            \"billing\": [\n","                (\"I was charged twice this month.\", \"I'm sorry to hear that. Let me check your billing history.\"),\n","                (\"Can I get a refund?\", \"Sure, let me initiate a refund for you.\"),\n","                (\"Why is my invoice so high?\", \"I'll review your latest invoice for any unusual charges.\"),\n","            ],\n","            \"technical\": [\n","                (\"My app keeps crashing.\", \"Sorry about that. Could you try reinstalling the app?\"),\n","                (\"I can't connect to the server.\", \"Letâ€™s troubleshoot your connection.\"),\n","                (\"The website is not loading.\", \"Weâ€™re looking into this issue.\"),\n","            ],\n","            \"account\": [\n","                (\"How do I reset my password?\", \"You can reset your password from the account settings.\"),\n","                (\"I want to delete my account.\", \"Weâ€™re sorry to see you go. I'll guide you through the deletion process.\"),\n","                (\"How can I update my email address?\", \"You can update your email in your profile settings.\"),\n","            ],\n","            \"general\": [\n","                (\"What are your working hours?\", \"We are available 24/7.\"),\n","                (\"Where are you located?\", \"We operate remotely worldwide.\"),\n","                (\"Do you have a mobile app?\", \"Yes, our app is available on Android and iOS.\"),\n","            ]\n","        }\n","\n","    def generate_dataset(self, num_entries=1000):\n","        \"\"\"Generate and save the dataset as a CSV file.\"\"\"\n","        dataset = []\n","        for _ in range(num_entries):\n","            category = random.choice(list(self.categories.keys()))\n","            query, response = random.choice(self.categories[category])\n","            dataset.append([category, query, response])\n","\n","        with open(self.output_file, 'w', newline='') as file:\n","            writer = csv.writer(file)\n","            writer.writerow([\"Category\", \"Query\", \"Response\"])\n","            writer.writerows(dataset)\n","\n","        print(f\"âœ… Dataset generated successfully: {self.output_file}\")\n","\n","# Run the dataset generator\n","if __name__ == \"__main__\":\n","    generator = DatasetGenerator()\n","    generator.generate_dataset(1000)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LHh6TAzuzfng","executionInfo":{"status":"ok","timestamp":1747411140045,"user_tz":480,"elapsed":38,"user":{"displayName":"Ayappan Palani (Jace)","userId":"14027805070623119759"}},"outputId":"3bdeafd4-8b51-43a3-8fcb-150ecbb42f26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["âœ… Dataset generated successfully: customer_support_dataset.csv\n"]}]},{"cell_type":"code","source":["# Import required libraries\n","import csv\n","import random\n","\n","# Define a class for dataset generation\n","class CustomerSupportDataset:\n","    def __init__(self, output_file='customer_support_dataset.csv'):\n","        # Output file name\n","        self.output_file = output_file\n","        # Define categories and example query-response pairs\n","        self.categories = {\n","            \"billing\": [\n","                (\"I was charged twice this month.\", \"Iâ€™m sorry to hear that. Let me check your billing history.\"),\n","                (\"Can I get a refund?\", \"Sure, let me initiate a refund for you.\"),\n","                (\"Why is my invoice so high?\", \"I'll review your latest invoice for any unusual charges.\"),\n","                (\"When is my next payment due?\", \"Your next payment is scheduled for the 5th of next month.\")\n","            ],\n","            \"technical\": [\n","                (\"My app keeps crashing.\", \"Sorry about that. Could you try reinstalling the app?\"),\n","                (\"I can't connect to the server.\", \"Letâ€™s troubleshoot your connection.\"),\n","                (\"The website is not loading.\", \"Weâ€™re currently investigating this issue.\"),\n","                (\"Why can't I upload files?\", \"Please check your file size and internet connection.\")\n","            ],\n","            \"account\": [\n","                (\"How do I reset my password?\", \"You can reset your password from the account settings.\"),\n","                (\"I want to delete my account.\", \"Weâ€™re sorry to see you go. I'll guide you through the process.\"),\n","                (\"How can I update my email address?\", \"You can update your email in your profile settings.\"),\n","                (\"Is my account information secure?\", \"Yes, we use industry-standard encryption to protect your data.\")\n","            ],\n","            \"general\": [\n","                (\"What are your working hours?\", \"We are available 24/7.\"),\n","                (\"Where are you located?\", \"We operate remotely worldwide.\"),\n","                (\"Do you have a mobile app?\", \"Yes, our app is available on Android and iOS.\"),\n","                (\"How can I contact support?\", \"You can reach us via live chat or email support.\")\n","            ]\n","        }\n","\n","    def generate_dataset(self, num_entries=1000):\n","        \"\"\"Generate the dataset and save it as a CSV file.\"\"\"\n","        dataset = []\n","\n","        for _ in range(num_entries):\n","            # Randomly pick a category\n","            category = random.choice(list(self.categories.keys()))\n","            # Randomly pick a query-response pair from the selected category\n","            query, response = random.choice(self.categories[category])\n","            # Append to dataset\n","            dataset.append([category, query, response])\n","\n","        # Write to CSV file\n","        with open(self.output_file, 'w', newline='', encoding='utf-8') as file:\n","            writer = csv.writer(file)\n","            writer.writerow([\"Category\", \"Query\", \"Response\"])\n","            writer.writerows(dataset)\n","\n","        print(f\"âœ… Dataset generated successfully: {self.output_file}\")\n","\n","# Run the generator when this script is executed directly\n","if __name__ == \"__main__\":\n","    generator = CustomerSupportDataset()\n","    generator.generate_dataset(1000)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZccNCEyK01_O","executionInfo":{"status":"ok","timestamp":1747411466297,"user_tz":480,"elapsed":25,"user":{"displayName":"Ayappan Palani (Jace)","userId":"14027805070623119759"}},"outputId":"282e1b91-891e-462a-b13c-89156f8c05d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["âœ… Dataset generated successfully: customer_support_dataset.csv\n"]}]}]}